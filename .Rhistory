dot_guide_size = 0.4
) +
labs(
title = "Average Movie Duration by Country",
subtitle = "Comparing 'Before 2010' (red) vs. 'After 2010' (blue)",
x = "Duration (minutes)",
y = "Country"
) +
#Text label for difference
geom_text(
aes(x = mid_point, label = paste0("Δ:", abs(round(diff, 0)))),
color = "gray30",
size = 3.5,
fontface = "bold",
nudge_y = 0.3
) +
theme_minimal(base_size = 12)
# ===== Step 2: Parse Netflix Data =====
# Convert date_added to proper Date format if not already
if(!inherits(netflix$date_added, "Date")){
netflix$date_added <- as.Date(netflix$date_added, format = "%B %d, %Y")
}
# Factorize certain columns
netflix$type <- factor(netflix$type)
netflix$rating <- factor(netflix$rating, exclude = c("", NA))
# ===== Step 3a: Data Wrangling for Dumbbell Chart =====
netflix_movies <- netflix %>%
filter(type == "Movie") %>%
mutate(
duration_min = as.numeric(str_remove(duration, " min")),
era = if_else(release_year < 2010, "Before 2010", "After 2010")
) %>%
separate_rows(country, sep = ",") %>%
mutate(country = str_trim(country)) %>%
filter(duration_min > 0 & !is.na(country) & country != "")
# Focus on top 10 countries by movie count
top_countries <- netflix_movies %>%
count(country, sort = TRUE) %>%
slice_head(n = 10) %>%
pull(country)
country_era_durations <- netflix_movies %>%
filter(country %in% top_countries) %>%
group_by(country, era) %>%
summarise(
avg_dur = mean(duration_min, na.rm = TRUE),
.groups = "drop"
) %>%
pivot_wider(names_from = era, values_from = avg_dur) %>%
rename(
old_avg = `Before 2010`,
new_avg = `After 2010`
) %>%
filter(!is.na(old_avg) & !is.na(new_avg)) %>%
mutate(
diff     = new_avg - old_avg,
mid_point = (old_avg + new_avg) / 2   # center for difference label
)
# ===== Step 3b: Plot Dumbbell Chart =====
ggplot(country_era_durations, aes(y = reorder(country, old_avg))) +
geom_dumbbell(
aes(x = old_avg, xend = new_avg),
size = 1.5,
color = "gray70",
colour_x = "red",
colour_xend = "blue",
dot_guide = TRUE,
dot_guide_size = 0.4
) +
labs(
title = "Average Movie Duration by Country",
subtitle = "Comparing 'Before 2010' (red) vs. 'After 2010' (blue)",
x = "Duration (minutes)",
y = "Country"
) +
#Text label for difference
geom_text(
aes(x = mid_point, label = paste0("Δ", abs(round(diff, 0)))),
color = "gray30",
size = 3.5,
fontface = "bold",
nudge_y = 0.3
) +
theme_minimal(base_size = 12)
# ===== Step 2: Parse Netflix Data =====
# Convert date_added to proper Date format if not already
if(!inherits(netflix$date_added, "Date")){
netflix$date_added <- as.Date(netflix$date_added, format = "%B %d, %Y")
}
# Factorize certain columns
netflix$type <- factor(netflix$type)
netflix$rating <- factor(netflix$rating, exclude = c("", NA))
# ===== Step 3a: Data Wrangling for Dumbbell Chart =====
netflix_movies <- netflix %>%
filter(type == "Movie") %>%
mutate(
duration_min = as.numeric(str_remove(duration, " min")),
era = if_else(release_year < 2010, "Before 2010", "After 2010")
) %>%
separate_rows(country, sep = ",") %>%
mutate(country = str_trim(country)) %>%
filter(duration_min > 0 & !is.na(country) & country != "")
# Focus on top 10 countries by movie count
top_countries <- netflix_movies %>%
count(country, sort = TRUE) %>%
slice_head(n = 10) %>%
pull(country)
country_era_durations <- netflix_movies %>%
filter(country %in% top_countries) %>%
group_by(country, era) %>%
summarise(
avg_dur = mean(duration_min, na.rm = TRUE),
.groups = "drop"
) %>%
pivot_wider(names_from = era, values_from = avg_dur) %>%
rename(
old_avg = `Before 2010`,
new_avg = `After 2010`
) %>%
filter(!is.na(old_avg) & !is.na(new_avg)) %>%
mutate(
diff     = new_avg - old_avg,
mid_point = (old_avg + new_avg) / 2   # center for difference label
)
# ===== Step 3b: Plot Dumbbell Chart =====
ggplot(country_era_durations, aes(y = reorder(country, old_avg))) +
geom_dumbbell(
aes(x = old_avg, xend = new_avg),
size = 1.5,
color = "gray70",
colour_x = "red",
colour_xend = "#2ca02c",
dot_guide = TRUE,
dot_guide_size = 0.4
) +
labs(
title = "Average Movie Duration by Country",
subtitle = "Comparing 'Before 2010' (red) vs. 'After 2010' (blue)",
x = "Duration (minutes)",
y = "Country"
) +
#Text label for difference
geom_text(
aes(x = mid_point, label = paste0("Δ", abs(round(diff, 0)))),
color = "gray30",
size = 3.5,
fontface = "bold",
nudge_y = 0.3
) +
theme_minimal(base_size = 12)
# ===== Step 2: Parse Netflix Data =====
# Convert date_added to proper Date format if not already
if(!inherits(netflix$date_added, "Date")){
netflix$date_added <- as.Date(netflix$date_added, format = "%B %d, %Y")
}
# Factorize certain columns
netflix$type <- factor(netflix$type)
netflix$rating <- factor(netflix$rating, exclude = c("", NA))
# ===== Step 3a: Data Wrangling for Dumbbell Chart =====
netflix_movies <- netflix %>%
filter(type == "Movie") %>%
mutate(
duration_min = as.numeric(str_remove(duration, " min")),
era = if_else(release_year < 2010, "Before 2010", "After 2010")
) %>%
separate_rows(country, sep = ",") %>%
mutate(country = str_trim(country)) %>%
filter(duration_min > 0 & !is.na(country) & country != "")
# Focus on top 10 countries by movie count
top_countries <- netflix_movies %>%
count(country, sort = TRUE) %>%
slice_head(n = 10) %>%
pull(country)
country_era_durations <- netflix_movies %>%
filter(country %in% top_countries) %>%
group_by(country, era) %>%
summarise(
avg_dur = mean(duration_min, na.rm = TRUE),
.groups = "drop"
) %>%
pivot_wider(names_from = era, values_from = avg_dur) %>%
rename(
old_avg = `Before 2010`,
new_avg = `After 2010`
) %>%
filter(!is.na(old_avg) & !is.na(new_avg)) %>%
mutate(
diff     = new_avg - old_avg,
mid_point = (old_avg + new_avg) / 2   # center for difference label
)
# ===== Step 3b: Plot Dumbbell Chart =====
ggplot(country_era_durations, aes(y = reorder(country, old_avg))) +
geom_dumbbell(
aes(x = old_avg, xend = new_avg),
size = 1.5,
color = "gray70",
colour_x = "#d62728",
colour_xend = "#2ca02c",
dot_guide = TRUE,
dot_guide_size = 0.4
) +
labs(
title = "Average Movie Duration by Country",
subtitle = "Comparing 'Before 2010' (red) vs. 'After 2010' (blue)",
x = "Duration (minutes)",
y = "Country"
) +
#Text label for difference
geom_text(
aes(x = mid_point, label = paste0("Δ", abs(round(diff, 0)))),
color = "gray30",
size = 3.5,
fontface = "bold",
nudge_y = 0.3
) +
theme_minimal(base_size = 12)
# ===== Step 2: Parse Netflix Data =====
# Convert date_added to proper Date format if not already
if(!inherits(netflix$date_added, "Date")){
netflix$date_added <- as.Date(netflix$date_added, format = "%B %d, %Y")
}
# Factorize certain columns
netflix$type <- factor(netflix$type)
netflix$rating <- factor(netflix$rating, exclude = c("", NA))
# ===== Step 3a: Data Wrangling for Dumbbell Chart =====
netflix_movies <- netflix %>%
filter(type == "Movie") %>%
mutate(
duration_min = as.numeric(str_remove(duration, " min")),
era = if_else(release_year < 2010, "Before 2010", "After 2010")
) %>%
separate_rows(country, sep = ",") %>%
mutate(country = str_trim(country)) %>%
filter(duration_min > 0 & !is.na(country) & country != "")
# Focus on top 10 countries by movie count
top_countries <- netflix_movies %>%
count(country, sort = TRUE) %>%
slice_head(n = 10) %>%
pull(country)
country_era_durations <- netflix_movies %>%
filter(country %in% top_countries) %>%
group_by(country, era) %>%
summarise(
avg_dur = mean(duration_min, na.rm = TRUE),
.groups = "drop"
) %>%
pivot_wider(names_from = era, values_from = avg_dur) %>%
rename(
old_avg = `Before 2010`,
new_avg = `After 2010`
) %>%
filter(!is.na(old_avg) & !is.na(new_avg)) %>%
mutate(
diff     = new_avg - old_avg,
mid_point = (old_avg + new_avg) / 2   # center for difference label
)
# ===== Step 3b: Plot Dumbbell Chart =====
ggplot(country_era_durations, aes(y = reorder(country, old_avg))) +
geom_dumbbell(
aes(x = old_avg, xend = new_avg),
size = 1.5,
color = "gray70",
colour_x = "#d62728",
colour_xend = "#2ca02c",
dot_guide = TRUE,
dot_guide_size = 0.4
) +
labs(
title = "Average Movie Duration by Country",
subtitle = "Comparing 'Before 2010' (red) vs. 'After 2010' (green)",
x = "Duration (minutes)"
) +
#Text label for difference
geom_text(
aes(x = mid_point, label = paste0("Δ", abs(round(diff, 0)))),
color = "gray30",
size = 3.5,
fontface = "bold",
nudge_y = 0.3
) +
theme_minimal(base_size = 12)
# ===== Step 2: Parse Netflix Data =====
# Convert date_added to proper Date format if not already
if(!inherits(netflix$date_added, "Date")){
netflix$date_added <- as.Date(netflix$date_added, format = "%B %d, %Y")
}
# Factorize certain columns
netflix$type <- factor(netflix$type)
netflix$rating <- factor(netflix$rating, exclude = c("", NA))
# ===== Step 3a: Data Wrangling for Dumbbell Chart =====
netflix_movies <- netflix %>%
filter(type == "Movie") %>%
mutate(
duration_min = as.numeric(str_remove(duration, " min")),
era = if_else(release_year < 2010, "Before 2010", "After 2010")
) %>%
separate_rows(country, sep = ",") %>%
mutate(country = str_trim(country)) %>%
filter(duration_min > 0 & !is.na(country) & country != "")
# Focus on top 10 countries by movie count
top_countries <- netflix_movies %>%
count(country, sort = TRUE) %>%
slice_head(n = 10) %>%
pull(country)
country_era_durations <- netflix_movies %>%
filter(country %in% top_countries) %>%
group_by(country, era) %>%
summarise(
avg_dur = mean(duration_min, na.rm = TRUE),
.groups = "drop"
) %>%
pivot_wider(names_from = era, values_from = avg_dur) %>%
rename(
old_avg = `Before 2010`,
new_avg = `After 2010`
) %>%
filter(!is.na(old_avg) & !is.na(new_avg)) %>%
mutate(
diff     = new_avg - old_avg,
mid_point = (old_avg + new_avg) / 2   # center for difference label
)
# ===== Step 3b: Plot Dumbbell Chart =====
ggplot(country_era_durations, aes(y = reorder(country, old_avg))) +
geom_dumbbell(
aes(x = old_avg, xend = new_avg),
size = 1.5,
color = "gray70",
colour_x = "#d62728",
colour_xend = "#2ca02c",
dot_guide = TRUE,
dot_guide_size = 0.4
) +
labs(
title = "Average Movie Duration by Country",
subtitle = "Comparing 'Before 2010' (red) vs. 'After 2010' (green)",
x = "Duration (minutes)",
y = "Country"
) +
#Text label for difference
geom_text(
aes(x = mid_point, label = paste0("Δ", abs(round(diff, 0)))),
color = "gray30",
size = 3.5,
fontface = "bold",
nudge_y = 0.3
) +
theme_minimal(base_size = 12)
+
theme(axis.text.y=element_blank(),  #remove y axis labels
axis.ticks.y=element_blank()  #remove y axis ticks
)
# ===== Step 2: Parse Netflix Data =====
# Convert date_added to proper Date format if not already
if(!inherits(netflix$date_added, "Date")){
netflix$date_added <- as.Date(netflix$date_added, format = "%B %d, %Y")
}
# Factorize certain columns
netflix$type <- factor(netflix$type)
netflix$rating <- factor(netflix$rating, exclude = c("", NA))
# ===== Step 3a: Data Wrangling for Dumbbell Chart =====
netflix_movies <- netflix %>%
filter(type == "Movie") %>%
mutate(
duration_min = as.numeric(str_remove(duration, " min")),
era = if_else(release_year < 2010, "Before 2010", "After 2010")
) %>%
separate_rows(country, sep = ",") %>%
mutate(country = str_trim(country)) %>%
filter(duration_min > 0 & !is.na(country) & country != "")
# Focus on top 10 countries by movie count
top_countries <- netflix_movies %>%
count(country, sort = TRUE) %>%
slice_head(n = 10) %>%
pull(country)
country_era_durations <- netflix_movies %>%
filter(country %in% top_countries) %>%
group_by(country, era) %>%
summarise(
avg_dur = mean(duration_min, na.rm = TRUE),
.groups = "drop"
) %>%
pivot_wider(names_from = era, values_from = avg_dur) %>%
rename(
old_avg = `Before 2010`,
new_avg = `After 2010`
) %>%
filter(!is.na(old_avg) & !is.na(new_avg)) %>%
mutate(
diff     = new_avg - old_avg,
mid_point = (old_avg + new_avg) / 2   # center for difference label
)
# ===== Step 3b: Plot Dumbbell Chart =====
ggplot(country_era_durations, aes(y = reorder(country, old_avg))) +
geom_dumbbell(
aes(x = old_avg, xend = new_avg),
size = 1.5,
color = "gray70",
colour_x = "#d62728",
colour_xend = "#2ca02c",
dot_guide = TRUE,
dot_guide_size = 0.4
) +
labs(
title = "Average Movie Duration by Country",
subtitle = "Comparing 'Before 2010' (red) vs. 'After 2010' (green)",
x = "Duration (minutes)",
y = ¨NULL
# ===== Step 2: Parse Netflix Data =====
# Convert date_added to proper Date format if not already
if(!inherits(netflix$date_added, "Date")){
netflix$date_added <- as.Date(netflix$date_added, format = "%B %d, %Y")
}
# Factorize certain columns
netflix$type <- factor(netflix$type)
netflix$rating <- factor(netflix$rating, exclude = c("", NA))
# ===== Step 3a: Data Wrangling for Dumbbell Chart =====
netflix_movies <- netflix %>%
filter(type == "Movie") %>%
mutate(
duration_min = as.numeric(str_remove(duration, " min")),
era = if_else(release_year < 2010, "Before 2010", "After 2010")
) %>%
separate_rows(country, sep = ",") %>%
mutate(country = str_trim(country)) %>%
filter(duration_min > 0 & !is.na(country) & country != "")
# Focus on top 10 countries by movie count
top_countries <- netflix_movies %>%
count(country, sort = TRUE) %>%
slice_head(n = 10) %>%
pull(country)
country_era_durations <- netflix_movies %>%
filter(country %in% top_countries) %>%
group_by(country, era) %>%
summarise(
avg_dur = mean(duration_min, na.rm = TRUE),
.groups = "drop"
) %>%
pivot_wider(names_from = era, values_from = avg_dur) %>%
rename(
old_avg = `Before 2010`,
new_avg = `After 2010`
) %>%
filter(!is.na(old_avg) & !is.na(new_avg)) %>%
mutate(
diff     = new_avg - old_avg,
mid_point = (old_avg + new_avg) / 2   # center for difference label
)
# ===== Step 3b: Plot Dumbbell Chart =====
ggplot(country_era_durations, aes(y = reorder(country, old_avg))) +
geom_dumbbell(
aes(x = old_avg, xend = new_avg),
size = 1.5,
color = "gray70",
colour_x = "#d62728",
colour_xend = "#2ca02c",
dot_guide = TRUE,
dot_guide_size = 0.4
) +
labs(
title = "Average Movie Duration by Country",
subtitle = "Comparing 'Before 2010' (red) vs. 'After 2010' (green)",
x = "Duration (minutes)",
y = NULL
) +
#Text label for difference
geom_text(
aes(x = mid_point, label = paste0("Δ", abs(round(diff, 0)))),
color = "gray30",
size = 3.5,
fontface = "bold",
nudge_y = 0.3
) +
theme_minimal(base_size = 12)
Set working directory and clear environment
# Set working directory and clear environment
rm(list = ls())
setwd("C:/Users/joze_/OneDrive - Stockholm University (1)/Skrivbordet/forecasting_projects-main/API_Database_Visualize_pipeline")
# Load required packages
library(DBI)
# Establish the connection (using 'con' as a more conventional name)
con <- dbConnect(RPostgres::Postgres(),
dbname   = "Macro_DATABASE",
host     = "localhost",
port     = 5432,
user     = "postgres",
password = "mdsa45")
# Optional: List existing tables to verify connection
print(dbListTables(con))
# Read CSV files into R
merged_data   <- read.csv("Data/merged.csv")
quarterly_data <- read.csv("Data/quarterly.csv")
baro_data     <- read.csv("Data/baro.csv")
View(merged_data)
# Set working directory and clear environment
rm(list = ls())
setwd("C:/Users/joze_/OneDrive - Stockholm University (1)/Skrivbordet/forecasting_projects-main/API_Database_Visualize_pipeline")
# Load required packages
library(DBI)
# Establish the connection (using 'con' as a more conventional name)
con <- dbConnect(RPostgres::Postgres(),
dbname   = "Macro_DATABASE",
host     = "localhost",
port     = 5432,
user     = "postgres",
password = "mdsa45")
# Optional: List existing tables to verify connection
print(dbListTables(con))
# Read CSV files into R
merged_data   <- read.csv("Data/merged.csv")
quarterly_data <- read.csv("Data/quarterly.csv")
baro_data     <- read.csv("Data/baro.csv")
View(merged_data)
View(quarterly_data)
